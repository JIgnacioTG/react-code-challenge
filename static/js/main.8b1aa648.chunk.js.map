{"version":3,"sources":["Icon/index.js","MineralInterest/index.js","Npri/index.js","EditTractOwnership/index.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faLevelUpAlt","faMinusCircle","faPlus","faSmile","Icon","iconProps","icon","rotation","getIconProps","MineralInterest","value","onChange","data-testid","id","name","type","className","placeholder","aria-label","aria-describedby","owner","InputGroup","FormControl","interest","Append","Text","lease","Button","variant","onClick","Npri","Prepend","syle","paddingRight","EditTractOwnership","useState","mineralInterests","setMineralInterests","indexMi","indexNp","v","event","newMineralInterest","target","filter","index","npris","uuidv4","newNpris","Table","responsive","borderless","scope","map","mineralInterest","key","npri","style","textAlign","tractOwnerships","App","Container","Row","Col","Jumbotron","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b1aa648.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faLevelUpAlt,\r\n  faMinusCircle,\r\n  faPlus,\r\n  faSmile,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faLevelUpAlt, faMinusCircle, faPlus, faSmile);\r\n\r\nconst getIconProps = icon => {\r\n  switch (icon) {\r\n    case 'add':\r\n      return {\r\n        icon: 'plus',\r\n      };\r\n    case 'indent':\r\n      return {\r\n        icon: 'level-up-alt',\r\n        rotation: 90,\r\n      };\r\n    case 'remove':\r\n      return {\r\n        icon: 'minus-circle',\r\n      };\r\n    case 'smile':\r\n      return {\r\n        icon: 'smile',\r\n      };\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n\r\nconst Icon = ({ icon }) => {\r\n  const iconProps = getIconProps(icon);\r\n\r\n  return <FontAwesomeIcon {...iconProps} />;\r\n};\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\r\n\r\nimport Icon from '../Icon';\r\n\r\nconst MineralInterest = ({ value, onChange }) => {\r\n  return (\r\n    <tr data-testid={'mineralInterest-' + value.id}>\r\n      <td>\r\n        <input\r\n          data-testid={'mineralInterest-' + value.id + '.owner'}\r\n          name=\"owner\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Owner\"\r\n          aria-label=\"Owner\"\r\n          aria-describedby=\"basic-addon1\"\r\n          value={value.owner}\r\n          onChange={onChange}\r\n        />\r\n      </td>\r\n      <td>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            id={'mineralInterest-' + value.id + '.interest'}\r\n            name=\"interest\"\r\n            placeholder=\"0\"\r\n            aria-label=\"0\"\r\n            aria-describedby=\"basic-addon2\"\r\n            value={value.interest}\r\n            onChange={onChange}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text id=\"basic-addon2\">%</InputGroup.Text>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </td>\r\n      <td></td>\r\n      <td>\r\n        <input\r\n          data-testid={'mineralInterest-' + value.id + '.lease'}\r\n          name=\"lease\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Lease\"\r\n          aria-label=\"Lease\"\r\n          aria-describedby=\"basic-addon1\"\r\n          value={value.lease}\r\n          onChange={onChange}\r\n        />\r\n      </td>\r\n      <td>\r\n        <Button\r\n          data-testid={'mineralInterest-' + value.id + '.remove'}\r\n          name=\"remove\"\r\n          variant=\"light\"\r\n          onClick={onChange}\r\n        >\r\n          <Icon icon=\"remove\" />\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default MineralInterest;\r\n","import React from 'react';\r\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\r\n\r\nimport Icon from '../Icon';\r\n\r\nconst Npri = ({ value, onChange }) => {\r\n  return (\r\n    <tr data-testid={'npri-' + value.id}>\r\n      <td>\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"basic-addon2\">\r\n              <Icon syle={{ paddingRight: '20px' }} icon=\"indent\" />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            data-testid={'npri-' + value.id + '.owner'}\r\n            name=\"owner\"\r\n            placeholder=\"Owner\"\r\n            aria-label=\"Owner\"\r\n            aria-describedby=\"basic-addon1\"\r\n            value={value.owner}\r\n            onChange={onChange}\r\n          />\r\n        </InputGroup>\r\n      </td>\r\n      <td></td>\r\n      <td>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            data-testid={'npri-' + value.id + '.interest'}\r\n            name=\"interest\"\r\n            placeholder=\"0\"\r\n            aria-label=\"0\"\r\n            aria-describedby=\"basic-addon2\"\r\n            value={value.interest}\r\n            onChange={onChange}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text id=\"basic-addon2\">%</InputGroup.Text>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </td>\r\n      <td></td>\r\n      <td>\r\n        <Button\r\n          data-testid={'npri-' + value.id + '.remove'}\r\n          name=\"remove\"\r\n          variant=\"light\"\r\n          onClick={onChange}\r\n        >\r\n          <Icon icon=\"remove\" />\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Npri;\r\n","import React, { useState } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// Components\r\nimport ManualInterest from '../MineralInterest';\r\nimport Npri from '../Npri';\r\nimport Icon from '../Icon';\r\n\r\nfunction EditTractOwnership({ value = [], onChange = () => {} }) {\r\n  const [mineralInterests, setMineralInterests] = useState(value);\r\n\r\n  onChange = (indexMi, indexNp, v) => (event) => {\r\n    let newMineralInterest = [...mineralInterests];\r\n    if (indexMi != null) {\r\n      if (indexNp == null) {\r\n        if (event.target.name === 'remove') {\r\n          newMineralInterest = mineralInterests.filter(\r\n            (value, index) => index !== indexMi\r\n          );\r\n        } else if (event.target.name === 'add') {\r\n          if (newMineralInterest[indexMi].npris != null) {\r\n            newMineralInterest[indexMi].npris = [\r\n              ...newMineralInterest[indexMi].npris,\r\n              {\r\n                id: uuidv4(),\r\n                owner: '',\r\n                interest: 0,\r\n              },\r\n            ];\r\n          } else {\r\n            newMineralInterest[indexMi].npris = [\r\n              {\r\n                id: uuidv4(),\r\n                owner: '',\r\n                interest: 0,\r\n              },\r\n            ];\r\n          }\r\n        } else {\r\n          if (event.target.name === 'owner') {\r\n            newMineralInterest[indexMi].owner = event.target.value;\r\n          } else if (event.target.name === 'interest') {\r\n            newMineralInterest[indexMi].interest = event.target.value;\r\n          } else {\r\n            newMineralInterest[indexMi].lease = event.target.value;\r\n          }\r\n          // newMineralInterest[indexMi].[event.target.name] = event.target.value;\r\n        }\r\n      } else {\r\n        if (event.target.name === 'remove') {\r\n          let newNpris = newMineralInterest[indexMi].npris.filter(\r\n            (value, index) => index !== indexNp\r\n          );\r\n          newMineralInterest[indexMi].npris = newNpris;\r\n        } else {\r\n          if (event.target.name === 'owner') {\r\n            newMineralInterest[indexMi].npris[indexNp].owner =\r\n              event.target.value;\r\n          } else {\r\n            newMineralInterest[indexMi].npris[indexNp].lease =\r\n              event.target.value;\r\n          }\r\n          // newMineralInterest[indexMi].npris[indexNp].[event.target.name] = event.target.value;\r\n        }\r\n      }\r\n    } else {\r\n      newMineralInterest = [\r\n        ...mineralInterests,\r\n        {\r\n          id: uuidv4(),\r\n          owner: '',\r\n          interest: 0,\r\n          lease: '',\r\n        },\r\n      ];\r\n    }\r\n    setMineralInterests(newMineralInterest);\r\n    return newMineralInterest;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table responsive borderless>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Owner</th>\r\n            <th scope=\"col\">Mineral Interest</th>\r\n            <th scope=\"col\">NPRI</th>\r\n            <th scope=\"col\">Lease</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        {mineralInterests.map((mineralInterest, indexMi) => (\r\n          <tbody key={mineralInterest.id}>\r\n            <ManualInterest\r\n              key={mineralInterest.id}\r\n              value={mineralInterest}\r\n              onChange={onChange(indexMi)}\r\n            />\r\n            {mineralInterest.npris != null\r\n              ? mineralInterest.npris.map((npri, indexNp) => (\r\n                  <Npri\r\n                    key={npri.id}\r\n                    value={npri}\r\n                    onChange={onChange(indexMi, indexNp)}\r\n                  />\r\n                ))\r\n              : null}\r\n            <tr>\r\n              <td style={{ textAlign: 'right' }}>\r\n                <Button name=\"add\" variant=\"light\" onClick={onChange(indexMi)}>\r\n                  <Icon icon=\"add\" /> Add NPRI\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        ))}\r\n        <tbody>\r\n          <tr>\r\n            <td style={{ textAlign: 'right' }}>\r\n              <Button name=\"add\" variant=\"light\" onClick={onChange()}>\r\n                <Icon icon=\"add\" /> Add Mineral Interest\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTractOwnership;\r\n","import React from 'react';\r\nimport { Col, Container, Jumbotron, Row } from 'react-bootstrap';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\n\r\nimport EditTractOwnership from './EditTractOwnership';\r\nimport Icon from './Icon';\r\n\r\nconst tractOwnerships = [\r\n  {\r\n    id: uuidv4(),\r\n    owner: 'Luke Skywalker',\r\n    interest: 0.5,\r\n    lease: 'Tatooine Lease',\r\n    npris: [\r\n      {\r\n        id: uuidv4(),\r\n        owner: 'Leia Organa',\r\n        interest: 0.45,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        owner: 'Han Solo',\r\n        interest: 0.15,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Jumbotron>\r\n            <h1>\r\n              Coatí Labs Code Challenge <Icon icon=\"smile\" />\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <EditTractOwnership value={tractOwnerships} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}